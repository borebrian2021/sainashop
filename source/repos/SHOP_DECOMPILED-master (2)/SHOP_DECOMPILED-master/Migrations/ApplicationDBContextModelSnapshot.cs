// <auto-generated />
using Lubes.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SHOP_DECOMPILED.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SHOP.Models.Creditors_account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Credit")
                        .HasColumnType("double");

                    b.Property<string>("Customer_name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Date_created")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Phone_number")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Creditors");
                });

            modelBuilder.Entity("SHOP.Models.Creditors_account_fuel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("double");

                    b.Property<string>("Customer_name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Date_created")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Phone_number")
                        .HasColumnType("int");

                    b.Property<int>("station_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Creditors_fuel");
                });

            modelBuilder.Entity("SHOP.Models.Credits", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Client_id")
                        .HasColumnType("int");

                    b.Property<string>("Date_created")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Item")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Quantity")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Total")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.ToTable("Credits");
                });

            modelBuilder.Entity("SHOP.Models.Credits_fuel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ammount_in_litres")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Client_id")
                        .HasColumnType("int");

                    b.Property<string>("Date_created")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Fuel")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Number_plate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Total")
                        .HasColumnType("double");

                    b.Property<int>("station_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Credits_fuel");
                });

            modelBuilder.Entity("SHOP.Models.Expiries", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Date_created")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Expiry_date")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Item_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Expiries");
                });

            modelBuilder.Entity("SHOP.Models.Payment_history", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Ammount_paid")
                        .HasColumnType("double");

                    b.Property<double>("Balance")
                        .HasColumnType("double");

                    b.Property<int>("Client_id")
                        .HasColumnType("int");

                    b.Property<string>("Date_created")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Payment_history");
                });

            modelBuilder.Entity("SHOP.Models.Payment_history_fuel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Ammount_paid")
                        .HasColumnType("double");

                    b.Property<double>("Balance")
                        .HasColumnType("double");

                    b.Property<int>("Client_id")
                        .HasColumnType("int");

                    b.Property<string>("Date_created")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Payment_history_fuel");
                });

            modelBuilder.Entity("SHOP.Models.Restock_history", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Date_restock")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Item_id")
                        .HasColumnType("int");

                    b.Property<double>("Prev_quantity")
                        .HasColumnType("double");

                    b.Property<string>("Supplier")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("new_quanity")
                        .HasColumnType("double");

                    b.Property<double>("quantity")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.ToTable("Restock_history");
                });

            modelBuilder.Entity("SHOP.Models.SMS_Config", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SSD")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Token")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("SMS_Config");
                });

            modelBuilder.Entity("SHOP.Models.SMS_Settings", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Fuel_id")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Last_set")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Level")
                        .HasColumnType("double");

                    b.Property<string>("status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("SMS_Settings");
                });

            modelBuilder.Entity("SHOP.Models.Settings", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Action")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("SHOP.Models.Suppliers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Company_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Location")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Supliers");
                });

            modelBuilder.Entity("SHOP.Models.log_in", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Full_name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Shop_name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("strRole")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Log_in");
                });

            modelBuilder.Entity("SHOP.Models.shop_items", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Cost_price")
                        .HasColumnType("double");

                    b.Property<string>("DateTime")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Item_name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Item_price")
                        .HasColumnType("double");

                    b.Property<double>("Quantity")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.ToTable("Shop_items");
                });

            modelBuilder.Entity("SHOP.Models.sold_items", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Cost_cash")
                        .HasColumnType("double");

                    b.Property<string>("DateTime")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Item_id")
                        .HasColumnType("int");

                    b.Property<double>("Profit")
                        .HasColumnType("double");

                    b.Property<double>("Total_Cost_cash")
                        .HasColumnType("double");

                    b.Property<double>("Total_cash_made")
                        .HasColumnType("double");

                    b.Property<double>("quantity_sold")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.ToTable("sold_items");
                });

            modelBuilder.Entity("SHOP_DECOMPILED.Models.Expenses", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Agent_id")
                        .HasColumnType("double");

                    b.Property<double>("Ammount")
                        .HasColumnType("double");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Expense")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("SHOP_DECOMPILED.Models.Fuel_category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Current_quantity")
                        .HasColumnType("double");

                    b.Property<string>("Fuel_names")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Station_id")
                        .HasColumnType("int");

                    b.Property<double>("Tank_capacity")
                        .HasColumnType("double");

                    b.Property<int>("fuel_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Fuel_category");
                });

            modelBuilder.Entity("SHOP_DECOMPILED.Models.Fuel_station_reg", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Owners_id")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Station_Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Fuel_station_reg");
                });

            modelBuilder.Entity("SHOP_DECOMPILED.Models.General_sales_history", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Attendant_id")
                        .HasColumnType("int");

                    b.Property<double>("Availlable_cash")
                        .HasColumnType("double");

                    b.Property<double>("Cash_at_hand")
                        .HasColumnType("double");

                    b.Property<double>("Cash_paybill")
                        .HasColumnType("double");

                    b.Property<double>("Expenses")
                        .HasColumnType("double");

                    b.Property<double>("On_credit")
                        .HasColumnType("double");

                    b.Property<double>("Total_cash_made")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.ToTable("General_sales_history");
                });

            modelBuilder.Entity("SHOP_DECOMPILED.Models.Individual_fuel_Sales_history", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Attendant")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Cash_made")
                        .HasColumnType("double");

                    b.Property<double>("Closing_meter")
                        .HasColumnType("double");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Dispenser_id")
                        .HasColumnType("int");

                    b.Property<int>("Fuel_id")
                        .HasColumnType("int");

                    b.Property<double>("Litres_sold")
                        .HasColumnType("double");

                    b.Property<double>("Previous_meter")
                        .HasColumnType("double");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<double>("Remaining_fuel")
                        .HasColumnType("double");

                    b.Property<int>("Station_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Individual_fuel_Sales_history");
                });

            modelBuilder.Entity("SHOP_DECOMPILED.Models.Meter_readings", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Agent_id")
                        .HasColumnType("double");

                    b.Property<double>("Current_readings")
                        .HasColumnType("double");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Fuel_id")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Previous_readings")
                        .HasColumnType("double");

                    b.Property<int>("Station_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Meter_readings");
                });

            modelBuilder.Entity("SHOP_DECOMPILED.Models.Refill_history", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Ammount_refilled")
                        .HasColumnType("double");

                    b.Property<string>("Date_refilled")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Fuel_id")
                        .HasColumnType("int");

                    b.Property<int>("agent_id")
                        .HasColumnType("int");

                    b.Property<double>("final_readings")
                        .HasColumnType("double");

                    b.Property<double>("initial_readings")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.ToTable("Refill_history");
                });

            modelBuilder.Entity("SHOP_DECOMPILED.Models.System_users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Full_name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("National_id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Roles")
                        .HasColumnType("int");

                    b.Property<int>("station_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("System_users");
                });
#pragma warning restore 612, 618
        }
    }
}
